{"ast":null,"code":"//TODO: create contact using all actions\nimport { SET_CONTACT, SET_LOADING, CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"./action.types\"; //TODO: use switch case\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null ? { ...state,\n        contacts: []\n      } : { ...state,\n        contacts: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case CONTACT_TO_UPDATE:\n      return { ...state,\n        contactToUpdate: action.payload,\n        contactToUpdateKey: action.Key\n      };\n\n    case SET_SINGLE_CONTACT:\n      return { ...state,\n        contact: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/bhavjot/Desktop/React/ContactApp/src/context/reducer.js"],"names":["SET_CONTACT","SET_LOADING","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","state","action","type","payload","contacts","isLoading","contactToUpdate","contactToUpdateKey","Key","contact"],"mappings":"AAAA;AAEA,SACEA,WADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,gBALP,C,CAOA;;AAEA,gBAAe,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAOK,MAAM,CAACE,OAAP,IAAkB,IAAlB,GAAyB,EAAC,GAAGH,KAAJ;AAAUI,QAAAA,QAAQ,EAAC;AAAnB,OAAzB,GAAkD,EAAC,GAAGJ,KAAJ;AAAUI,QAAAA,QAAQ,EAACH,MAAM,CAACE;AAA1B,OAAzD;;AACA,SAAKN,WAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAUK,QAAAA,SAAS,EAACJ,MAAM,CAACE;AAA3B,OAAP;;AAEF,SAAKL,iBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELM,QAAAA,eAAe,EAACL,MAAM,CAACE,OAFlB;AAGLI,QAAAA,kBAAkB,EAAEN,MAAM,CAACO;AAHtB,OAAP;;AAMA,SAAKT,kBAAL;AACG,aAAO,EACL,GAAGC,KADE;AAELS,QAAAA,OAAO,EAAGR,MAAM,CAACE;AAFZ,OAAP;;AAKP;AACE,aAAOH,KAAP;AApBJ;AAsBC,CAvBD","sourcesContent":["//TODO: create contact using all actions\n\nimport {\n  SET_CONTACT,\n  SET_LOADING,\n  CONTACT_TO_UPDATE,\n  SET_SINGLE_CONTACT\n} from \"./action.types\";\n\n//TODO: use switch case\n\nexport default (state,action) => {\nswitch (action.type) {\n  case SET_CONTACT:\n    return action.payload == null ? {...state,contacts:[]} : {...state,contacts:action.payload}\n    case SET_LOADING:\n      return {...state,isLoading:action.payload}\n\n    case CONTACT_TO_UPDATE:\n      return {\n        ...state,\n        contactToUpdate:action.payload,\n        contactToUpdateKey: action.Key\n      }  \n\n      case SET_SINGLE_CONTACT:\n         return {\n           ...state,\n           contact : action.payload\n         }\n\n  default:\n    return state\n}\n}\n"]},"metadata":{},"sourceType":"module"}