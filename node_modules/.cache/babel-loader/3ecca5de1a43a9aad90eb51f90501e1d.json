{"ast":null,"code":"var _jsxFileName = \"/home/bhavjot/Desktop/React/ContactApp/src/components/Contact.js\";\n// https://firebase.google.com/docs/database/web/read-and-write?authuser=1#read_data_once\nimport React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\"; // icons\n\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\"; //TODO: add firebase\n\nimport firebase from \"firebase/app\"; // context stuffs\n//TODO: import context and action: update and single_contact\n\nimport { ContactContext } from \"../context/Context\";\nimport { CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"../context/action.types\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Contact = ({\n  contact,\n  contactKey\n}) => {\n  //TODO: destructuring dispatch from the context\n  const {\n    dispatch\n  } = useContext(ContactContext); // history hooks to get history\n\n  const history = useHistory(); // to delete the contact when delete contact is clicked\n\n  const deleteContact = () => {\n    firebase.database().ref(`/contacts/${contactKey}`).remove().then(() => {\n      toast(\"Deleted Successfully\", {\n        type: \"warning\"\n      });\n    }).catch(err => console.log(err));\n  }; // update the star/important contact ,ie, star it or unstar the single contact\n\n\n  const updateImpContact = () => {\n    //TODO: update (star) contact, use contactKey\n    firebase.database().ref(`/contacts/${contactKey}`).update({\n      star: !contact.star\n    }, err => {\n      console.log(err);\n    }).then(() => {\n      toast(\"Contact updated \", {\n        type: \"info\"\n      });\n    }).catch(error => console.log(error));\n  }; // when the update icon/ pen ion is clicked\n\n\n  const updateContact = () => {\n    // dispatching one action to update contact\n    //TODO: use dispatch to update\n    dispatch({\n      type: CONTACT_TO_UPDATE,\n      payload: contact,\n      key: contactKey\n    }); // and pushing to the add contact screen\n\n    history.push(\"/contact/add\");\n  }; // to view a single contact in the contact/view screen\n\n\n  const viewSingleContact = contact => {\n    // setting single contact in state\n    //TODO: use dispatch to view single contact\n    dispatch({\n      type: SET_SINGLE_CONTACT,\n      payload: contact\n    }); // sending...\n\n    history.push(\"/contact/view\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: () => updateImpContact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, contact.star ? /*#__PURE__*/React.createElement(FaStar, {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegStar, {\n    className: \" text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: contact.picture,\n    alt: \"\",\n    className: \"img-circle profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    onClick: () => viewSingleContact(contact),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, contact.phoneNumber), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  },\n  /* {FIXME: display contact email}  */\n  contact.email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, contact.address)), /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MdDelete, {\n    onClick: () => deleteContact(),\n    color: \"danger\",\n    className: \"text-danger icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MdEdit, {\n    className: \"icon text-info ml-2\",\n    onClick: () => updateContact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/home/bhavjot/Desktop/React/ContactApp/src/components/Contact.js"],"names":["React","useContext","Row","Col","FaRegStar","FaStar","MdDelete","MdEdit","firebase","ContactContext","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","useHistory","toast","Contact","contact","contactKey","dispatch","history","deleteContact","database","ref","remove","then","type","catch","err","console","log","updateImpContact","update","star","error","updateContact","payload","key","push","viewSingleContact","picture","name","phoneNumber","email","address"],"mappings":"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","sourcesContent":["// https://firebase.google.com/docs/database/web/read-and-write?authuser=1#read_data_once\n\nimport React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\n// icons\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\n\n//TODO: add firebase\nimport firebase from \"firebase/app\"\n// context stuffs\n//TODO: import context and action: update and single_contact\nimport {ContactContext} from \"../context/Context\"\nimport {CONTACT_TO_UPDATE,SET_SINGLE_CONTACT} from \"../context/action.types\"\nimport { useHistory } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst Contact = ({ contact, contactKey }) => {\n  //TODO: destructuring dispatch from the context\n    const {dispatch}  = useContext(ContactContext)\n  // history hooks to get history\n  const history = useHistory();\n\n  // to delete the contact when delete contact is clicked\n  const deleteContact = () => {\n\n    firebase.database().ref(`/contacts/${contactKey}`).remove().then(() => {toast(\"Deleted Successfully\",{type:\"warning\"})}).catch(err => console.log(err))\n  };\n\n  // update the star/important contact ,ie, star it or unstar the single contact\n  const updateImpContact = () => {\n    //TODO: update (star) contact, use contactKey\n\n    firebase.database().ref(`/contacts/${contactKey}`).update(\n      {\n        star:!contact.star\n      },\n      err => {\n        console.log(err)\n      }\n    ).then(() => {\n      toast(\"Contact updated \",{type:\"info\"})\n    }).catch(error => console.log(error))\n  };\n\n  // when the update icon/ pen ion is clicked\n  const updateContact = () => {\n    // dispatching one action to update contact\n    //TODO: use dispatch to update\n  dispatch({\n    type:CONTACT_TO_UPDATE,\n    payload:contact,\n    key:contactKey\n  })\n    // and pushing to the add contact screen\n    history.push(\"/contact/add\");\n  };\n\n  // to view a single contact in the contact/view screen\n  const viewSingleContact = contact => {\n    // setting single contact in state\n    //TODO: use dispatch to view single contact\n         dispatch({\n           type:SET_SINGLE_CONTACT,\n           payload:contact,\n         })\n    // sending...\n    history.push(\"/contact/view\");\n  };\n\n  return (\n    <>\n      <Row>\n        <Col\n          md=\"1\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <div className=\"icon\" onClick={() => updateImpContact()}>\n            {contact.star ? (\n              <FaStar className=\" text-primary\" />\n            ) : (\n              <FaRegStar className=\" text-info\" />\n            )}\n          </div>\n        </Col>\n        <Col\n          md=\"2\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <img src={contact.picture} alt=\"\" className=\"img-circle profile\" />\n        </Col>\n        <Col md=\"8\" onClick={() => viewSingleContact(contact)}>\n          <div className=\"text-primary\">{contact.name}</div>\n\n          <div className=\"text-secondary\">{contact.phoneNumber}</div>\n          <div className=\"text-secondary\">\n            {/* {FIXME: display contact email}  */\n            contact.email\n            }\n          </div>\n\n          <div className=\"text-info\">{contact.address}</div>\n        </Col>\n        <Col\n          md=\"1\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <MdDelete\n            onClick={() => deleteContact()}\n            color=\"danger\"\n            className=\"text-danger icon\"\n          />\n          <MdEdit\n            className=\"icon text-info ml-2\"\n            onClick={() => updateContact()}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}